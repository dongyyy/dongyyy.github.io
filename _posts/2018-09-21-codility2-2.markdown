---
layout: post
title:  "Codility - OddOccurrencesInArray"
date:   2018-09-18 23:43:00
author: Dongy
categories: Codility
cover:  "/assets/codility.png"
tags:	codility java OddOccurrencesInArray
---

## Lesson 2 - OddOccurrencesInArray

A non-empty array A consisting of N integers is given. <br>
The array contains an odd number of elements, and each element of the array can be paired with another<br> element that has the same value, except for one element that is left unpaired.<br>
For example, in array A such that:<br>
  A[0] = 9  A[1] = 3  A[2] = 9<br>
  A[3] = 3  A[4] = 9  A[5] = 7<br>
  A[6] = 9<br>
* the elements at indexes 0 and 2 have value 9,<br>
* the elements at indexes 1 and 3 have value 3,<br>
* the elements at indexes 4 and 6 have value 9,<br>
* the element at index 5 has value 7 and is unpaired.<br>
Write a function:<br>
int solution(int A[], int N);<br>
that, given an array A consisting of N integers fulfilling the above conditions, returns the value of<br> the unpaired element.<br>
For example, given array A such that:<br>
  A[0] = 9  A[1] = 3  A[2] = 9<br>
  A[3] = 3  A[4] = 9  A[5] = 7<br>
  A[6] = 9<br>
the function should return 7, as explained in the example above.<br>
Write an efficient algorithm for the following assumptions:<br>
* N is an odd integer within the range [1..1,000,000];<br>
* each element of array A is an integer within the range [1..1,000,000,000];<br>
* all but one of the values in A occur an even number of times.<br>
<br>

### Code

```
	public static int solution(int[] A){
		
		Set<Integer> set = new HashSet<Integer>();
		
		for(int i : A ){
			if(set.contains(i)){
				set.remove(i);
			}else{
				set.add(i);
			}
		}
		
		return set.iterator().next();
	}
```
<br>
